[project]
name = "python"
version = "0.0.1"
description = "python"
requires-python = ">=3.12"
dependencies = []

# [build-system]
# requires = ["hatchling"]
# build-backend = "hatchling.build"

[dependency-groups]
deepseek-openrouter = [
    "openai>=1.99.9",
]
dev = ["black>=25.1.0", "mypy>=1.15.0", "pytest>=8.3.5", "ruff>=0.11.4"]
package-progress-bar = ["tqdm"]
package_gui-ttt = ["customtkinter>=5.2.2"]
pip-installer = [
    "aiofiles",
]

[tool.ruff]
line-length = 80
target-version = "py313"
select = ["E", "F", "B", "I", "N", "UP", "PL", "RUF", "C4", "T20"]
ignore = []
fixable = ["ALL"]
unfixable = []

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101", "PLR2004"]

[tool.pytest.ini_options]
python_files = "test_*.py"
addopts = "--verbose --cov-report=term-missing"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.black]
line-length = 80
target-version = ["py313"]
include = '\.pyi?$'

[tool.coverage.run]
source = ["python"]
omit = ["tests/*", "docs/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == '__main__':",
    "pass",
    "raise ImportError",
]

[tool.uv.workspace]
members = ["function/turbo_print"]
